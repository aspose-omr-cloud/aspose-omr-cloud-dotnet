<Window x:Class="Aspose.OMR.Client.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:viewModels="clr-namespace:Aspose.OMR.Client.ViewModels"
        xmlns:views="clr-namespace:Aspose.OMR.Client.Views"
        xmlns:converters="clr-namespace:Aspose.OMR.Client.Converters"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        Icon="/OMR.ico"
        Title="OMR Client"
        WindowStartupLocation="CenterScreen"
        MinHeight="600" MinWidth="900"
        Height="800" Width="1280">

    <Window.Resources>
        <Storyboard x:Key="ValidationOkAnimation" TargetName="OkPanel">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Completed="OkNotificationCompleted">
                <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0"></EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.5"></EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame Value="1" KeyTime="0:0:1.5"></EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame Value="0" KeyTime="0:0:2"></EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>

    <Window.DataContext>
        <viewModels:MainViewModel/>
    </Window.DataContext>

    <Window.InputBindings>
        <KeyBinding Key="Left" Command="{Binding MoveElementsHorizontal}" CommandParameter="-1"></KeyBinding>
        <KeyBinding Key="Right" Command="{Binding MoveElementsHorizontal}" CommandParameter="1"></KeyBinding>
        <KeyBinding Key="Up" Command="{Binding MoveElementsVertical}" CommandParameter="-1"></KeyBinding>
        <KeyBinding Key="Down" Command="{Binding MoveElementsVertical}" CommandParameter="1"></KeyBinding>
        
        <KeyBinding Modifiers="Control" Key="C" Command="{Binding CopyCommand}"/>
        <KeyBinding Modifiers="Control" Key="V" Command="{Binding PasteCommand}"  CommandParameter="{Binding ElementName=TabControl}"/>
        <KeyBinding Modifiers="Control" Key="A" Command="{Binding SelectAllCommand}"/>
        <KeyBinding Modifiers="Control" Key="O" Command="{Binding LoadTemplateCommand}"/>
        <KeyBinding Modifiers="Control" Key="N" Command="{Binding NewTemplateCommand}"/>
        <KeyBinding Modifiers="Control" Key="S" Command="{Binding SaveTemplateCommand}"/>
        
        <KeyBinding Modifiers="Control" Key="W" Command="{Binding CloseTabCommand}"/>
        <KeyBinding Modifiers="Control" Key="Z" Command="{Binding UndoCommand}"/>
        <KeyBinding Modifiers="Control" Key="Y" Command="{Binding RedoCommand}"/>
        
        <KeyBinding Modifiers="Control" Key="OemPlus" Command="{Binding ZoomInCommand}"/>
        <KeyBinding Modifiers="Control" Key="Add" Command="{Binding ZoomInCommand}"/>
        <KeyBinding Modifiers="Control" Key="OemMinus" Command="{Binding ZoomOutCommand}"/>
        <KeyBinding Modifiers="Control" Key="Subtract" Command="{Binding ZoomOutCommand}"/>
        <KeyBinding Modifiers="Control" Key="D0" Command="{Binding ZoomOriginalCommand}"/>
        <KeyBinding Modifiers="Control" Key="NumPad0" Command="{Binding ZoomOriginalCommand}"/>

        <KeyBinding Key="Delete" Command="{Binding DeleteCommand}"/>
    </Window.InputBindings>


    <i:Interaction.Triggers>
        <ei:DataTrigger Binding="{Binding ValidactionCompleteNotification}" Value="true">
            <ei:ControlStoryboardAction Storyboard="{StaticResource ValidationOkAnimation}"
                                        ControlStoryboardOption="Play"/>
        </ei:DataTrigger>
    </i:Interaction.Triggers>

    <Grid>

        <!--busy panel-->
        <Border Panel.ZIndex="1" IsEnabled="False" Visibility="{Binding Path=IsBusy, Converter={converters:BoolToVisibilityConverter}}">
            <Border.Background>
                <SolidColorBrush Color="White" Opacity="0.85"></SolidColorBrush>
            </Border.Background>

            <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Image VerticalAlignment="Center" HorizontalAlignment="Center" Source="/Icons/logoSpin.png" Stretch="None" RenderTransformOrigin="0.5, 0.5">
                    <Image.RenderTransform>
                        <!-- giving the transform a name tells the framework not to freeze it -->
                        <RotateTransform x:Name="noFreeze" />
                    </Image.RenderTransform>
                    <Image.Triggers>
                        <EventTrigger RoutedEvent="Image.Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)"
                                        To="360" Duration="0:0:0.6" RepeatBehavior="Forever" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Image.Triggers>
                </Image>

                <TextBlock Text="{Binding BusyIndicationMessage}" FontSize="22" Foreground="Black" VerticalAlignment="Center" TextAlignment="Center"/>
            </StackPanel>
         </Border>
        
        <!--Notification panels-->
        <Border Panel.ZIndex="1" IsEnabled="False" x:Name="ValidationOkBorder"
                Visibility="{Binding Path=OkNotificationVisible, Converter={converters:BoolToVisibilityConverter}}">
            <Border.Background>
                <SolidColorBrush Color="White" Opacity="0.85"></SolidColorBrush>
            </Border.Background>

            <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="OkPanel">
                <Image VerticalAlignment="Center" HorizontalAlignment="Center" Source="/Icons/Check48.png" Stretch="None"/>
                <TextBlock Text="Validation Successful" FontSize="22" Foreground="Black" VerticalAlignment="Center" TextAlignment="Center"/>
            </StackPanel>
        </Border>

        <DockPanel>
            
            <!--file menu-->
            <Menu DockPanel.Dock="Top" Background="Transparent">
                
                <MenuItem Header="_File">

                    <MenuItem Header="_New" Command="{Binding NewTemplateCommand}" InputGestureText="Ctrl+N" ToolTip="Create New Template">
                        <MenuItem.Icon>
                            <Image Source="/Icons/DocumentNew.png"/>
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Header="_Open..." Command="{Binding LoadTemplateCommand}" InputGestureText="Ctrl+O" ToolTip="Load Existing Template">
                        <MenuItem.Icon>
                            <Image Source="/Icons/Open.png"/>
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Header="_Generate Template..." Command="{Binding GenerateTemplateCommand}" ToolTip="Generate Template From Text Description">
                        <MenuItem.Icon>
                            <Image Source="/Icons/DocumentCreate.png"/>
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Header="_Save" Command="{Binding SaveTemplateCommand}" InputGestureText="Ctrl+S" ToolTip="Save Changes To Current Template">
                        <MenuItem.Icon>
                            <Image Source="/Icons/Save.png" Style="{StaticResource OpacityChangedImage}"/>
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Header="Save As..." Command="{Binding SaveAsTemplateCommand}" ToolTip="Save Changes To Current Template"/>

                    <MenuItem Header="Recent Templates" x:Name="RecentTemplates" ItemsSource="{Binding RecentFiles}">
                        <MenuItem.Resources>
                            <Style TargetType="MenuItem">
                                <Setter Property="Command" Value="{Binding ElementName=RecentTemplates, Path=DataContext.LoadRecentTemlateCommand}" />
                                <Setter Property="CommandParameter" Value="{Binding}" />
                            </Style>
                        </MenuItem.Resources>
                    </MenuItem>

                        <MenuItem Header="E_xit" Command="{Binding ExitCommand}" InputGestureText="Alt+F4" ToolTip="Close Application">
                        <MenuItem.Icon>
                            <Image Source="/Icons/Exit.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    
                </MenuItem>
                
                <MenuItem Header="_Edit">

                    <MenuItem Header="Undo" Command="{Binding UndoCommand}" ToolTipService.ShowOnDisabled="True" InputGestureText="Ctrl+Z" ToolTip="Undo">
                        <MenuItem.Icon>
                            <Image Source="/Icons/Undo.png" Style="{StaticResource OpacityChangedImage}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    
                    <MenuItem Header="Redo" Command="{Binding RedoCommand}" ToolTipService.ShowOnDisabled="True" InputGestureText="Ctrl+Y" ToolTip="Redo">
                        <MenuItem.Icon>
                            <Image Source="/Icons/Redo.png" Style="{StaticResource OpacityChangedImage}"/>
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Header="Load Template _Image..." Command="{Binding LoadTemplateImageCommand}" ToolTip="Load Template Image">
                        <MenuItem.Icon>
                            <Image Source="/Icons/Image.png" Style="{StaticResource OpacityChangedImage}"/>
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Header="_Copy" Command="{Binding CopyCommand}" ToolTipService.ShowOnDisabled="True" InputGestureText="Ctrl+C" ToolTip="Copy Selected Elements">
                        <MenuItem.Icon>
                            <Image Source="/Icons/Copy.png" Style="{StaticResource OpacityChangedImage}"/>
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Header="_Paste" Command="{Binding PasteCommand}" CommandParameter="menu" ToolTipService.ShowOnDisabled="True" InputGestureText="Ctrl+V" ToolTip="Paste Copied Elements">
                        <MenuItem.Icon>
                            <Image Source="/Icons/Paste.png" Style="{StaticResource OpacityChangedImage}"/>
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Header="_Delete" Command="{Binding DeleteCommand}" ToolTipService.ShowOnDisabled="True" InputGestureText="Del" ToolTip="Remove Selected Elements">
                        <MenuItem.Icon>
                            <Image Source="/Icons/Delete.png" Style="{StaticResource OpacityChangedImage}"/>
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Header="_Select All" Command="{Binding SelectAllCommand}" InputGestureText="Ctrl+A" ToolTip="Select All Elements" />

                    <MenuItem Header="_Apply Formatting" Command="{Binding ApplyFormattingCommand}" 
                              ToolTipService.ShowOnDisabled="True" ToolTip="Apply Formatting Of The Selected Element To All Elements"/>

                    <MenuItem Header="_Rename Group" Command="{Binding RenameGroupCommand}" 
                              ToolTipService.ShowOnDisabled="True" ToolTip="Quickly Rename Group Of Elements">
                        <MenuItem.Icon>
                            <Image Source="/Icons/Text.png" Style="{StaticResource OpacityChangedImage}"/>
                        </MenuItem.Icon>
                    </MenuItem>


                    <MenuItem Header="Shrink" Command="{Binding ShrinkElementCommand}" 
                              ToolTipService.ShowOnDisabled="True" ToolTip="Shrink Element's Area To Bounding Box Of Its Bubbles">
                        <MenuItem.Icon>
                            <Image Source="/Icons/Shrink.png" Style="{StaticResource OpacityChangedImage}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>

                <MenuItem Header="_View">

                    <MenuItem Header="Zoom _In" Command="{Binding ZoomInCommand}" InputGestureText="Ctrl++">
                        <MenuItem.Icon>
                            <Image Source="/Icons/ZoomIn.png" />
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Header="Zoom _Out" Command="{Binding ZoomOutCommand}" InputGestureText="Ctrl+-">
                        <MenuItem.Icon>
                            <Image Source="/Icons/ZoomOut.png" />
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Header="Ori_ginal Size" Command="{Binding ZoomOriginalCommand}" InputGestureText="Ctrl+0"/>
                </MenuItem>

                <MenuItem Header="_Settings">
                    <MenuItem Header="Credentials..." Command="{Binding ShowCredentialsSettingsCommand}" ToolTip="Show credentials settings window">
                        <MenuItem.Icon>
                            <Image Source="/Icons/Credentials.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                
                <MenuItem Header="_Help">
                    <MenuItem Header="About" Command="{Binding ShowAboutCommand}">
                    </MenuItem>
                </MenuItem>
            </Menu>

            <!--toolbar-->
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Background="White" Height="41">
                <views:MainToolbarView Background="White"/>
                <ContentControl Content="{Binding SelectedTab}" DockPanel.Dock="Right">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type viewModels:TemplateViewModel}">
                            <views:TemplateToolbarView HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:ResultsViewModel}">
                            <views:ResultsToolbarView HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
                
                <ToolBarTray Background="White" IsLocked="True" DockPanel.Dock="Top" Visibility="{Binding IsRecognitionAvailable, Converter={converters:BoolToVisibilityConverter}}">
                    <ToolBar Background="White" OverflowMode="Never" Style="{DynamicResource ToolBarStyleNoOverflow}" VerticalAlignment="Center">
                        <Separator Background="{StaticResource MainItemsBrush}" Width="2"/>
                        <Button Command="{Binding StartRecognitionCommand}" ToolTip="Recognize Images" ToolTipService.ShowOnDisabled="True">
                            <StackPanel Orientation="Vertical">
                                <Image Source="/Icons/Show.png" Style="{StaticResource OpacityChangedImage}"/>
                                <TextBlock Text="Recognize"/>
                            </StackPanel>
                        </Button>
                    </ToolBar>
                </ToolBarTray>
            </StackPanel>
        
            <!--main area-->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TabControl Grid.Row="0" Grid.Column="0" Background="WhiteSmoke" x:Name="TabControl" Focusable="False"
                            ItemsSource="{Binding TabViewModels}" SelectedItem="{Binding SelectedTab}"
                            AllowDrop="{Binding CanDrop}" Drop="OnTemplateDrop" BorderBrush="LightSkyBlue">
                    
                    <TabControl.Resources>
                        <DataTemplate DataType="{x:Type viewModels:TemplateViewModel}">
                            <views:TemplateView/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:ResultsViewModel}">
                            <views:ResultsView/>
                        </DataTemplate>
                    </TabControl.Resources>
                    
                    <TabControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding TabName}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14"/>
                                
                                <TextBlock Text="*" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="1,0,0,0" FontSize="14" 
                                           Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}, Path=DataContext.IsDirty, Converter={converters:BoolToVisibilityConverter}}"/>
                                
                                <Button HorizontalAlignment="Right" VerticalAlignment="Center"
                                        Width="16" Height="16" ToolTip="Close Tab"
                                        Padding="0" Margin="5,0,0,0"
                                        Visibility="{Binding IsSelected, Converter={converters:BoolToVisibilityConverter}}"
                                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=DataContext.CloseTabCommand}">
                                    <Image Source="/Icons/DeleteCrossIcon.ico" Width="12" Height="12"/>
                                </Button>
                            </StackPanel>
                        </DataTemplate>
                    </TabControl.ItemTemplate>
                </TabControl>

                <StackPanel Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Vertical" Visibility="{Binding StartPanelVisibility}" UseLayoutRounding="True">

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="2">
                        <Button HorizontalAlignment="Center" FontSize="18" Command="{Binding GenerateTemplateCommand}" Style="{StaticResource ImageButton}" 
                                BorderThickness="1" BorderBrush="{StaticResource MainItemsBrush}" Background="White" ToolTip="Create OMR Image And Template From Text Description" Margin="5">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Generate template" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"/>
                                    <Image Source="/Icons/DocumentCreate.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,5,5,5"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                    </StackPanel>
                    
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="2">
                        <Button HorizontalAlignment="Center" FontSize="18" Command="{Binding NewTemplateCommand}" Style="{StaticResource ImageButton}" 
                                BorderThickness="1" BorderBrush="{StaticResource MainItemsBrush}" Background="White" ToolTip="New Template" Margin="5">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Create new template" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"/>
                                    <Image Source="/Icons/DocumentAdd24.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,5,5,5"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="2">
                        <Button HorizontalAlignment="Center" FontSize="18" Command="{Binding LoadTemplateCommand}" Style="{StaticResource ImageButton}" 
                                BorderThickness="1" BorderBrush="{StaticResource MainItemsBrush}" Background="White" ToolTip="Open template" Margin="5">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Load existing template" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"/>
                                    <Image Source="/Icons/Open24.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,5,5,5"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                    </StackPanel>

                    <TextBlock Text="You may also Drag &amp; Drop template file to open it" FontSize="16" Foreground="Gray"
                               VerticalAlignment="Center" Margin="5" HorizontalAlignment="Center"></TextBlock>
                </StackPanel>

            </Grid>

        </DockPanel>
    </Grid>

</Window>
