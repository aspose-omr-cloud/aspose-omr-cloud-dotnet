/*
 * Copyright (C) 2023 Aspose Pty Ltd. All Rights Reserved.
 *
 * Licensed under the MIT (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://github.com/aspose-omr-cloud/aspose-omr-cloud-dotnet/blob/master/LICENSE
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/* 
 * Aspose OMR Cloud V5 API
 *
 * Aspose OMR Cloud V5 API
 *
 * OpenAPI spec version: v5
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Aspose.Omr.Cloud.Sdk.Model
{
    /// <summary>
    /// Defines Color
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
        public enum Color
    {
        /// <summary>
        /// Enum Aqua for value: Aqua
        /// </summary>
        [EnumMember(Value = "Aqua")]
        Aqua = 1,
        /// <summary>
        /// Enum Aquamarine for value: Aquamarine
        /// </summary>
        [EnumMember(Value = "Aquamarine")]
        Aquamarine = 2,
        /// <summary>
        /// Enum Black for value: Black
        /// </summary>
        [EnumMember(Value = "Black")]
        Black = 3,
        /// <summary>
        /// Enum Blue for value: Blue
        /// </summary>
        [EnumMember(Value = "Blue")]
        Blue = 4,
        /// <summary>
        /// Enum BlueViolet for value: BlueViolet
        /// </summary>
        [EnumMember(Value = "BlueViolet")]
        BlueViolet = 5,
        /// <summary>
        /// Enum Crimson for value: Crimson
        /// </summary>
        [EnumMember(Value = "Crimson")]
        Crimson = 6,
        /// <summary>
        /// Enum DarkBlue for value: DarkBlue
        /// </summary>
        [EnumMember(Value = "DarkBlue")]
        DarkBlue = 7,
        /// <summary>
        /// Enum DarkGreen for value: DarkGreen
        /// </summary>
        [EnumMember(Value = "DarkGreen")]
        DarkGreen = 8,
        /// <summary>
        /// Enum DarkOrange for value: DarkOrange
        /// </summary>
        [EnumMember(Value = "DarkOrange")]
        DarkOrange = 9,
        /// <summary>
        /// Enum DarkSalmon for value: DarkSalmon
        /// </summary>
        [EnumMember(Value = "DarkSalmon")]
        DarkSalmon = 10,
        /// <summary>
        /// Enum Fuchsia for value: Fuchsia
        /// </summary>
        [EnumMember(Value = "Fuchsia")]
        Fuchsia = 11,
        /// <summary>
        /// Enum Indigo for value: Indigo
        /// </summary>
        [EnumMember(Value = "Indigo")]
        Indigo = 12,
        /// <summary>
        /// Enum Lime for value: Lime
        /// </summary>
        [EnumMember(Value = "Lime")]
        Lime = 13,
        /// <summary>
        /// Enum Red for value: Red
        /// </summary>
        [EnumMember(Value = "Red")]
        Red = 14,
        /// <summary>
        /// Enum Teal for value: Teal
        /// </summary>
        [EnumMember(Value = "Teal")]
        Teal = 15,
        /// <summary>
        /// Enum White for value: White
        /// </summary>
        [EnumMember(Value = "White")]
        White = 16,
        /// <summary>
        /// Enum Gray for value: Gray
        /// </summary>
        [EnumMember(Value = "Gray")]
        Gray = 17,
        /// <summary>
        /// Enum LightGray for value: LightGray
        /// </summary>
        [EnumMember(Value = "LightGray")]
        LightGray = 18    }
}
