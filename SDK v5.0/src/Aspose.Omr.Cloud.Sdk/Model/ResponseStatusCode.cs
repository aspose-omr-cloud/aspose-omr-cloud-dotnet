/*
 * Copyright (C) 2023 Aspose Pty Ltd. All Rights Reserved.
 *
 * Licensed under the MIT (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://github.com/aspose-omr-cloud/aspose-omr-cloud-dotnet/blob/master/LICENSE
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/* 
 * Aspose OMR Cloud V5 API
 *
 * Aspose OMR Cloud V5 API
 *
 * OpenAPI spec version: v5
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Aspose.Omr.Cloud.Sdk.Model
{
    /// <summary>
    /// Defines ResponseStatusCode
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
        public enum ResponseStatusCode
    {
        /// <summary>
        /// Enum Ok for value: Ok
        /// </summary>
        [EnumMember(Value = "Ok")]
        Ok = 1,
        /// <summary>
        /// Enum PartiallyNotFound for value: PartiallyNotFound
        /// </summary>
        [EnumMember(Value = "PartiallyNotFound")]
        PartiallyNotFound = 2,
        /// <summary>
        /// Enum NoAnyResultData for value: NoAnyResultData
        /// </summary>
        [EnumMember(Value = "NoAnyResultData")]
        NoAnyResultData = 3,
        /// <summary>
        /// Enum ResultDataLost for value: ResultDataLost
        /// </summary>
        [EnumMember(Value = "ResultDataLost")]
        ResultDataLost = 4,
        /// <summary>
        /// Enum TaskNotFound for value: TaskNotFound
        /// </summary>
        [EnumMember(Value = "TaskNotFound")]
        TaskNotFound = 5,
        /// <summary>
        /// Enum NotReady for value: NotReady
        /// </summary>
        [EnumMember(Value = "NotReady")]
        NotReady = 6,
        /// <summary>
        /// Enum Error for value: Error
        /// </summary>
        [EnumMember(Value = "Error")]
        Error = 7    }
}
